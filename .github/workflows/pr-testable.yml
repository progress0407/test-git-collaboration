# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
#on: [pull_request]
#  push:
#    branches: [ "**feat**"]
#    branches:
#      - feat**
  pull_request.open:
#    branches: [ "**feat**" ]
    branches:
      - feature/*
#      - main
#      - feature/be/test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    - name: Check Shell Script
      shell: bash
      run: | 
        echo "pwd & ls -al"

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: If Fail Test
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ github.token }}
        script: |
          const pull_number = ${{ pull_request.number }}
          await github.pulls.createReview({
            ...context.repo,
            pull_number,
            body:"테스트코드를 다시 확인해주세요. ",
            event: "REQUEST_CHANGES"
          })
          await github.pulls.update({
            ...context.repo,
            pull_number,
            state: "closed"
          })
#      if: failure()
      if: always()

    - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
        token: ${{ github.token }}
